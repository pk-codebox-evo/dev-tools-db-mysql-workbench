/*
 * Copyright (c) 2008, 2017, Oracle and/or its affiliates. All rights reserved.
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License as
 * published by the Free Software Foundation; version 2 of the
 * License.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
 * 02110-1301  USA
 *
 * Code generated by this tool is covered by the LGPL version 2,
 * or (at your option) any later version
 */

#ifdef _WIN32
#define WIN32_LEAN_AND_MEAN
#include <windows.h>
#endif // _WIN32

#include <glib.h>

#include "grt.h"
#include "grtpp_helper.h"

//--------------------------------------------------------------------------------------------------

int main(int argc, char **argv) {
  if (argc < 5) {
    g_print("\nNot enough parameters given. Syntax:\n");
    g_print("  genobj <structs-file> <structs-dir> <output-dir> <impl-output-dir>\n");
    return -1;
  }

  std::string structs_file = argv[1];
  std::string structs_dir = argv[2];
  std::string output_dir = argv[3];
  std::string impl_output_dir = argv[4];

  std::multimap<std::string, std::string> requires;

  g_print("Reading structs from '%s', outputing classes to '%s'\n", structs_dir.c_str(), output_dir.c_str());

  grt::GRT::get()->scan_metaclasses_in(structs_dir, &requires);
  grt::GRT::get()->end_loading_metaclasses(false);

  grt::helper::generate_struct_code(structs_file, output_dir, impl_output_dir, requires);

  return 0;
}

//--------------------------------------------------------------------------------------------------
